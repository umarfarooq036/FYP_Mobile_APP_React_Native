let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/jaredh159/twrnc/twrnc
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +60 src/__tests__/tw.spec.ts
badd +66 ~/jaredh159/twrnc/twrnc/src/create.ts
badd +53 src/types.ts
badd +15 src/hooks.ts
badd +18 src/__tests__/memo-buster.spec.tsx
badd +13 ~/jaredh159/twrnc/twrnc/tsconfig.json
badd +20 src/__tests__/color-scheme.spec.tsx
badd +67 src/ClassParser.ts
badd +21 readme.md
badd +49 ~/jaredh159/twrnc/twrnc/migration-guide.md
badd +233 ~/jaredh159/twrnc/twrnc/src/helpers.ts
badd +6 ~/jaredh159/twrnc/twrnc/tsconfig.cjs.json
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/min-max-dims.spec.ts
badd +42 ~/jaredh159/twrnc/twrnc/src/__tests__/screens.spec.ts
badd +12 ~/jaredh159/twrnc/twrnc/src/screens.ts
badd +1 ~/jaredh159/twrnc/twrnc/src/__tests__/width-height.spec.ts
badd +12 ~/jaredh159/twrnc/twrnc/src/__tests__/types.spec.tsx
badd +21 ~/jaredh159/twrnc/twrnc/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts
badd +20 src/parse-inputs.ts
argglobal
%argdel
$argadd ./
edit ~/jaredh159/twrnc/twrnc/migration-guide.md
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt src/parse-inputs.ts
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=19
setlocal fen
let s:l = 49 - ((29 * winheight(0) + 27) / 54)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 49
normal! 084|
wincmd w
argglobal
if bufexists(fnamemodify("src/types.ts", ":p")) | buffer src/types.ts | else | edit src/types.ts | endif
if &buftype ==# 'terminal'
  silent file src/types.ts
endif
balt ~/jaredh159/twrnc/twrnc/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=19
setlocal fen
4
normal! zo
let s:l = 53 - ((27 * winheight(0) + 27) / 54)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 53
normal! 0
wincmd w
2wincmd w
wincmd =
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
